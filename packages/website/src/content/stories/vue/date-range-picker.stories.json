{
  "Basic": "<script setup lang=\"ts\">\nimport { DatePicker } from \"@ark-ui/vue\";\n</script>\n\n<template>\n  <DatePicker.Root selection-mode=\"range\">\n    <DatePicker.Label>Label</DatePicker.Label>\n    <DatePicker.Control>\n      <DatePicker.Input />\n      <DatePicker.Trigger>ðŸ“…</DatePicker.Trigger>\n      <DatePicker.ClearTrigger>Clear</DatePicker.ClearTrigger>\n    </DatePicker.Control>\n    <Teleport to=\"body\">\n      <DatePicker.Positioner>\n        <DatePicker.Content>\n          <DatePicker.YearSelect />\n          <DatePicker.MonthSelect />\n          <DatePicker.View view=\"day\" #default=\"api\">\n            <DatePicker.ViewControl>\n              <DatePicker.PrevTrigger>Prev</DatePicker.PrevTrigger>\n              <DatePicker.ViewTrigger>\n                <DatePicker.RangeText />\n              </DatePicker.ViewTrigger>\n              <DatePicker.NextTrigger>Next</DatePicker.NextTrigger>\n            </DatePicker.ViewControl>\n            <DatePicker.Table>\n              <DatePicker.TableHead>\n                <DatePicker.TableRow>\n                  <DatePicker.TableHeader\n                    v-for=\"(weekDay, id) in api.weekDays\"\n                    :key=\"id\"\n                    >{{ weekDay.short }}</DatePicker.TableHeader\n                  >\n                </DatePicker.TableRow>\n              </DatePicker.TableHead>\n              <DatePicker.TableBody>\n                <DatePicker.TableRow v-for=\"(week, id) in api.weeks\" :key=\"id\">\n                  <DatePicker.TableCell\n                    v-for=\"(day, id) in week\"\n                    :key=\"id\"\n                    :value=\"day\"\n                  >\n                    <DatePicker.TableCellTrigger>{{\n                      day.day\n                    }}</DatePicker.TableCellTrigger>\n                  </DatePicker.TableCell>\n                </DatePicker.TableRow>\n              </DatePicker.TableBody>\n            </DatePicker.Table>\n          </DatePicker.View>\n          <DatePicker.View view=\"month\" #default=\"api\">\n            <DatePicker.ViewControl>\n              <DatePicker.PrevTrigger>Prev</DatePicker.PrevTrigger>\n              <DatePicker.ViewTrigger>\n                <DatePicker.RangeText />\n              </DatePicker.ViewTrigger>\n              <DatePicker.NextTrigger>Next</DatePicker.NextTrigger>\n            </DatePicker.ViewControl>\n            <DatePicker.Table>\n              <DatePicker.TableBody>\n                <DatePicker.TableRow\n                  v-for=\"(months, id) in api.getMonthsGrid({\n                    columns: 4,\n                    format: 'short',\n                  })\"\n                  :key=\"id\"\n                >\n                  <DatePicker.TableCell\n                    v-for=\"(month, id) in months\"\n                    :key=\"id\"\n                    :value=\"month.value\"\n                  >\n                    <DatePicker.TableCellTrigger>{{\n                      month.label\n                    }}</DatePicker.TableCellTrigger>\n                  </DatePicker.TableCell>\n                </DatePicker.TableRow>\n              </DatePicker.TableBody>\n            </DatePicker.Table>\n          </DatePicker.View>\n          <DatePicker.View view=\"year\" #default=\"api\">\n            <DatePicker.ViewControl>\n              <DatePicker.PrevTrigger>Prev</DatePicker.PrevTrigger>\n              <DatePicker.ViewTrigger>\n                <DatePicker.RangeText />\n              </DatePicker.ViewTrigger>\n              <DatePicker.NextTrigger>Next</DatePicker.NextTrigger>\n            </DatePicker.ViewControl>\n            <DatePicker.Table>\n              <DatePicker.TableBody>\n                <DatePicker.TableRow\n                  v-for=\"(years, id) in api.getYearsGrid({ columns: 4 })\"\n                  :key=\"id\"\n                >\n                  <DatePicker.TableCell\n                    v-for=\"(year, id) in years\"\n                    :key=\"id\"\n                    :value=\"year.value\"\n                  >\n                    <DatePicker.TableCellTrigger>{{\n                      year.label\n                    }}</DatePicker.TableCellTrigger>\n                  </DatePicker.TableCell>\n                </DatePicker.TableRow>\n              </DatePicker.TableBody>\n            </DatePicker.Table>\n          </DatePicker.View>\n        </DatePicker.Content>\n      </DatePicker.Positioner>\n    </Teleport>\n  </DatePicker.Root>\n</template>\n",
  "Standalone": "<script setup lang=\"ts\">\nimport { DatePicker } from \"@ark-ui/vue\";\n</script>\n\n<template>\n  <DatePicker.Root\n    open\n    :num-of-months=\"2\"\n    selection-mode=\"range\"\n    :close-on-select=\"false\"\n    #default=\"api\"\n  >\n    <DatePicker.View view=\"day\">\n      <DatePicker.ViewControl>\n        <DatePicker.PrevTrigger>Prev</DatePicker.PrevTrigger>\n        <DatePicker.ViewTrigger>\n          <DatePicker.RangeText />\n        </DatePicker.ViewTrigger>\n        <DatePicker.NextTrigger>Next</DatePicker.NextTrigger>\n      </DatePicker.ViewControl>\n      <div style=\"display: flex; gap: 24px\">\n        <DatePicker.Table>\n          <DatePicker.TableHead>\n            <DatePicker.TableRow>\n              <DatePicker.TableHeader\n                v-for=\"(weekDay, id) in api.weekDays\"\n                :key=\"id\"\n                >{{ weekDay.short }}</DatePicker.TableHeader\n              >\n            </DatePicker.TableRow>\n          </DatePicker.TableHead>\n          <DatePicker.TableBody>\n            <DatePicker.TableRow v-for=\"(week, id) in api.weeks\" :key=\"id\">\n              <DatePicker.TableCell\n                v-for=\"(day, id) in week\"\n                :key=\"id\"\n                :value=\"day\"\n              >\n                <DatePicker.TableCellTrigger>{{\n                  day.day\n                }}</DatePicker.TableCellTrigger>\n              </DatePicker.TableCell>\n            </DatePicker.TableRow>\n          </DatePicker.TableBody>\n        </DatePicker.Table>\n        <!-- 2nd month -->\n        <DatePicker.Table>\n          <DatePicker.TableHead>\n            <DatePicker.TableRow>\n              <DatePicker.TableHeader\n                v-for=\"(weekDay, id) in api.weekDays\"\n                :key=\"id\"\n                >{{ weekDay.short }}</DatePicker.TableHeader\n              >\n            </DatePicker.TableRow>\n          </DatePicker.TableHead>\n          <DatePicker.TableBody>\n            <DatePicker.TableRow v-for=\"(week, id) in offset\" :key=\"id\">\n              <!-- TODO: make working standalone -->\n              <!-- <DatePicker.TableCell\n                    v-for=\"(day, id) in week\"\n                    :key=\"id\"\n                    :value=\"day\"\n                    :visible-range=\"offset.visibleRange\"\n                  >\n                    <DatePicker.TableCellTrigger>{{ day.day }}</DatePicker.TableCellTrigger>\n                  </DatePicker.TableCell> -->\n            </DatePicker.TableRow>\n          </DatePicker.TableBody>\n        </DatePicker.Table>\n      </div>\n    </DatePicker.View>\n  </DatePicker.Root>\n</template>\n"
}
